function toggleHamburger(e, t) { let o = e.classList.contains("active"); o ? (e.classList.remove("active"), t.classList.remove("active")) : (e.classList.add("active"), t.classList.add("active")) } function __initHamburger__() { let e = document.querySelector(".hamburger"), t = document.querySelector("nav"); e.onclick = () => { toggleHamburger(e, t) }, addEventListener("resize", o => { o.target.innerWidth > 1024 && e.classList.contains("active") && (e.classList.remove("active"), t.classList.remove("active")) }), addEventListener("scroll", () => { window.pageYOffset >= 330 && (e.classList.remove("active"), t.classList.remove("active")) }) } function populateExperienceField(e) { let t = document.querySelector("#experienceBoxes"), o = t.querySelector("[experienceBoxTemplate]"), n = o.content.querySelector("[experienceSubItemTemplate]"); e.forEach(e => { let l = o.content.cloneNode(!0).children[0], r = l.querySelector("ul"), c = l.querySelector("img"); c.src = e.companyImageLink, c.alt = `${e.company} logo`, l.querySelector("h3").textContent = e.position, e.content.forEach(e => { let t = n.content.cloneNode(!0).children[0], o = t.querySelectorAll("strong")[1], l = e.location; l ? o.textContent = ` @ ${l}` : o.style.display = "none", t.querySelectorAll("strong")[0].textContent = `${e.subtitle}`, t.querySelector("span").textContent = `: ${e.description}`, r.appendChild(t) }), t.appendChild(l) }), updateCopy() } function updateCopy() { window.innerWidth < 470 ? document.querySelectorAll(".experienceCopy").forEach(e => { e.style.display = "none" }) : document.querySelectorAll(".experienceCopy").forEach(e => { e.style.display = "inline" }) } function populatePortfolio(e) { let t = document.querySelector("#portfolioItems"), o = t.querySelector("[portfolioItemTemplate]"), n = o.content.querySelector("[languageBoxTemplate]"); e.forEach(e => { let l = o.content.cloneNode(!0).children[0]; l.querySelector("h3").textContent = e.title, l.querySelector("p").textContent = e.description; let r = l.querySelector(".languages"); e.languages.forEach(e => { let t = n.content.cloneNode(!0).children[0]; t.textContent = e, r.appendChild(t) }), t.appendChild(l) }) } __initHamburger__(), addEventListener("load", () => { document.querySelector("#loaderPage").style.display = "none", document.querySelector("header").style.position = "fixed" }), fetch("/assets/json/experiences.json").then(e => { e.json().then(e => { populateExperienceField(e) }) }), addEventListener("resize", () => { updateCopy() }), fetch("/assets/json/portfolio.json").then(e => { e.json().then(e => { populatePortfolio(e) }) });